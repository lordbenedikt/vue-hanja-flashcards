{"version":3,"file":"js/app.a819a93f.js","mappings":"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","sources":["webpack://vue-hanja-flashcards/./src/App.vue","webpack://vue-hanja-flashcards/./src/components/FlashCard.vue","webpack://vue-hanja-flashcards/./src/components/FlashCard.vue?0b23","webpack://vue-hanja-flashcards/./src/assets/vocab/vocab_0.txt","webpack://vue-hanja-flashcards/./src/assets/vocab/vocab_1.txt","webpack://vue-hanja-flashcards/./src/assets/vocab/vocab_2.txt","webpack://vue-hanja-flashcards/./src/assets/vocab/vocab_3.txt","webpack://vue-hanja-flashcards/./src/assets/vocab/vocab_4.txt","webpack://vue-hanja-flashcards/./src/App.vue?7ccd","webpack://vue-hanja-flashcards/./src/components/UI/BaseCard.vue","webpack://vue-hanja-flashcards/./src/components/UI/BaseCard.vue?60ee","webpack://vue-hanja-flashcards/./src/components/UI/BaseButton.vue","webpack://vue-hanja-flashcards/./src/components/UI/BaseButton.vue?0ecc","webpack://vue-hanja-flashcards/./src/main.js","webpack://vue-hanja-flashcards/webpack/bootstrap","webpack://vue-hanja-flashcards/webpack/runtime/chunk loaded","webpack://vue-hanja-flashcards/webpack/runtime/compat get default export","webpack://vue-hanja-flashcards/webpack/runtime/define property getters","webpack://vue-hanja-flashcards/webpack/runtime/global","webpack://vue-hanja-flashcards/webpack/runtime/hasOwnProperty shorthand","webpack://vue-hanja-flashcards/webpack/runtime/jsonp chunk loading","webpack://vue-hanja-flashcards/webpack/startup"],"sourcesContent":["<template>\n  <h2>Study Hanja</h2>\n  <div>\n    <base-button\n      v-for=\"i in 5\"\n      :key=\"'choose_' + i\"\n      @click=\"chooseVocabSet(i)\"\n      style=\"margin-right: 4px\"\n      >{{ i }}</base-button\n    >\n  </div>\n  <flash-card :vocabset=\"vocab[currentVocabSet]\"></flash-card>\n</template>\n\n<script>\nimport FlashCard from \"./components/FlashCard.vue\";\nimport vocab0 from \"./assets/vocab/vocab_0.txt\";\nimport vocab1 from \"./assets/vocab/vocab_1.txt\";\nimport vocab2 from \"./assets/vocab/vocab_2.txt\";\nimport vocab3 from \"./assets/vocab/vocab_3.txt\";\nimport vocab4 from \"./assets/vocab/vocab_4.txt\";\n\n\nexport default {\n  name: \"App\",\n  components: {\n    FlashCard,\n  },\n  data() {\n    return {\n      vocab: [],\n      currentVocabSet: 0,\n    };\n  },\n  async created() {\n    this.vocab.push(this.getVocabulary(vocab0));\n    this.vocab.push(this.getVocabulary(vocab1));\n    this.vocab.push(this.getVocabulary(vocab2));\n    this.vocab.push(this.getVocabulary(vocab3));\n    this.vocab.push(this.getVocabulary(vocab4));\n  },\n  methods: {\n    chooseVocabSet(num) {\n      console.log(this.vocab[0])\n      this.currentVocabSet = num - 1;\n    },\n    getVocabulary(vocabListString) {\n      const lines = vocabListString.split(\"\\n\").map((line) => line.trim());\n      this.fileContent = lines.filter((line) => line.trim() !== \"\"); // Filter out empty lines\n      return lines;\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","<template>\n  <base-card :isFront=\"isFront\" @mouseover=\"showBack\" @mouseleave=\"showFront\">\n    <div style=\"height:9em\">\n        <div v-if=\"isFront\" class=\"hanja\">{{ hanja }}</div>\n        <div class=\"center\" v-if=\"!isFront\" style=\"padding:0\">\n            <span class=\"pronunciation\">{{ pronunciation }}</span><br>\n            <span class=\"meaning\">{{ meaningEnglish }}</span><br>\n        </div>\n    </div>\n  </base-card>\n  <base-button @click=\"nextWord\">Next</base-button>\n</template>\n\n<script>\nexport default {\n  props: [\"vocabset\"],\n  watch: {\n    vocabset() {\n      this.nextWord()\n    },\n  },\n  mounted() {\n    this.nextWord()\n  },\n  data() {\n    return {\n        hanja: \"\",\n        pronunciation: \"\",\n        meaningEnglish: \"\",\n        isFront: true,\n    }\n  },\n  methods: {\n    showBack() {\n        this.isFront = false;\n    },\n    showFront() {\n        this.isFront = true;\n    },\n    nextWord() {\n        console.log(this.vocabset);\n        this.isFront = true;\n        const word = this.randomWord();\n        this.hanja = word.substring(0, 1);\n        const info = word.substring(3, word.length-1);\n        const infoParts = info.split('-').map(part => part.trim());\n        this.pronunciation = infoParts[0];\n        this.meaningEnglish = infoParts[2];\n    },\n    randomWord() {\n      return this.vocabset[Math.floor(Math.random() * this.vocabset.length)];\n    },\n  },\n};\n</script>\n\n<style scoped>\n.hanja {\n    font-size: 6em;\n}\n.pronunciation {\n    font-size: 2em;\n}\n.meaning {\n    font-size: 1.5em;\n}\ndiv.center {\n    position: relative;\n    top: 20%;\n    /* text-align: middle; */\n    /* vertical-align: baseline; */\n    margin: auto;\n    /* transform: translate(-50%, -50%); */\n}\n</style>","import { render } from \"./FlashCard.vue?vue&type=template&id=6ba83d82&scoped=true\"\nimport script from \"./FlashCard.vue?vue&type=script&lang=js\"\nexport * from \"./FlashCard.vue?vue&type=script&lang=js\"\n\nimport \"./FlashCard.vue?vue&type=style&index=0&id=6ba83d82&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6ba83d82\"]])\n\nexport default __exports__","export default \"人 (인 - 사람 - Person)\\n大 (대 - 큰 - Big)\\n小 (소 - 작은 - Small)\\n中 (중 - 가운데 - Middle)\\n一 (일 - 하나 - One)\\n二 (이 - 둘 - Two)\\n三 (삼 - 셋 - Three)\\n四 (사 - 넷 - Four)\\n五 (오 - 다섯 - Five)\\n六 (육 - 여섯 - Six)\\n七 (칠 - 일곱 - Seven)\\n八 (팔 - 여덟 - Eight)\\n九 (구 - 아홉 - Nine)\\n十 (십 - 열 - Ten)\\n百 (백 - 백 - Hundred)\\n千 (천 - 천 - Thousand)\\n万 (만 - 만 - Ten Thousand)\\n上 (상 - 위 - Above)\\n下 (하 - 아래 - Below)\\n左 (좌 - 왼쪽 - Left)\\n右 (우 - 오른쪽 - Right)\\n中 (중 - 가운데 - Center)\\n月 (월 - 달 - Moon)\\n日 (일 - 해 - Sun)\\n明 (명 - 밝은 - Bright)\\n本 (본 - 책 - Book)\\n東 (동 - 동 - East)\\n西 (서 - 서 - West)\\n南 (남 - 남 - South)\\n北 (북 - 북 - North)\\n山 (산 - 산 - Mountain)\\n水 (수 - 물 - Water)\\n火 (화 - 불 - Fire)\\n風 (풍 - 바람 - Wind)\\n土 (토 - 흙 - Earth)\\n金 (금 - 금 - Gold)\\n木 (목 - 나무 - Tree)\\n花 (화 - 꽃 - Flower)\\n草 (초 - 풀 - Grass)\\n鳥 (조 - 새 - Bird)\\n獣 (수 - 짐승 - Beast)\\n魚 (어 - 물고기 - Fish)\\n車 (차 - 자동차 - Car)\\n船 (선 - 배 - Ship)\\n鳥 (철 - 기차 - Train)\\n行 (행 - 가다 - Go)\\n止 (지 - 멈추다 - Stop)\\n正 (정 - 정확한 - Correct)\\n田 (전 - 밭 - Field)\\n国 (국 - 나라 - Country)\\n土 (토 - 흙 - Soil)\\n士 (사 - 신사 - Gentleman)\\n女 (여 - 여자 - Woman)\\n子 (자 - 아이 - Child)\\n父 (부 - 아버지 - Father)\\n母 (모 - 어머니 - Mother)\\n兄 (형 - 형 - Elder Brother)\\n弟 (제 - 동생 - Younger Brother)\\n姉 (누나 - 누나 - Elder Sister)\\n妹 (여동생 - 여동생 - Younger Sister)\\n友 (우 - 친구 - Friend)\\n義 (의 - 의리 - Righteousness)\\n息 (식 - 숨 - Breath)\\n心 (심 - 마음 - Heart)\\n必 (필 - 반드시 - Certainly)\\n我 (아 - 나 - I, me)\\n手 (수 - 손 - Hand)\\n市 (시 - 시장 - Market)\\n政 (정 - 정치 - Politics)\\n文 (문 - 문학 - Literature)\\n科 (과 - 과학 - Science)\\n学 (학 - 공부 - Study)\\n理 (리 - 원리 - Principle)\\n体 (체 - 몸 - Body)\\n音 (음 - 소리 - Sound)\\n話 (화 - 이야기 - Talk)\\n語 (어 - 언어 - Language)\\n読 (독 - 읽다 - Read)\\n書 (서 - 책 - Book)\\n見 (견 - 보다 - See)\\n聞 (문 - 듣다 - Hear)\\n詩 (시 - 시 - Poem)\\n詠 (영 - 읊다 - Recite)\\n詢 (순 - 묻다 - Inquire)\\n誠 (성 - 진실 - Sincere)\\n課 (과 - 수업 - Lesson)\\n談 (담 - 이야기하다 - Talk)\\n論 (론 - 논리 - Theory)\\n評 (평 - 평가하다 - Evaluate)\\n議 (의 - 의논하다 - Discuss)\\n讀 (독 - 읽다 - Read)\\n言 (언 - 말씀 - Speech)\\n語 (어 - 언어 - Language)\\n記 (기 - 기록하다 - Record)\\n識 (식 - 알다 - Know)\\n計 (계 - 계획하다 - Plan)\\n説 (설 - 설명하다 - Explain)\\n謝 (사 - 감사하다 - Thank)\\n謝 (사 - 사과하다 - Apologize)\\n請 (청 - 부탁하다 - Request)\";","export default \"願 (원 - 소원 - Wish)\\n意 (의 - 의도 - Intention)\\n微 (미 - 약간한 - Slight)\\n軽 (경 - 가벼운 - Light)\\n重 (중 - 무거운 - Heavy)\\n軍 (군 - 군대 - Military)\\n事 (사 - 일 - Thing)\\n感 (감 - 감동 - Emotion)\\n想 (상 - 생각하다 - Think)\\n念 (념 - 생각 - Thought)\\n聴 (청 - 듣다 - Listen)\\n視 (시 - 보다 - See)\\n性 (성 - 성격 - Nature)\\n格 (격 - 격식 - Form)\\n良 (량 - 좋은 - Good)\\n正 (정 - 바른 - Correct)\\n死 (사 - 죽다 - Die)\\n生 (생 - 살다 - Live)\\n保 (보 - 지키다 - Protect)\\n料 (료 - 재료 - Material)\\n製 (제 - 만들다 - Make)\\n用 (용 - 쓰다 - Use)\\n品 (품 - 물건 - Article)\\n消 (소 - 사라지다 - Disappear)\\n考 (고 - 생각하다 - Consider)\\n老 (로 - 늙은 - Old)\\n始 (시 - 시작하다 - Begin)\\n前 (전 - 앞 - Front)\\n後 (후 - 뒤 - Back)\\n楽 (악 - 즐거운 - Enjoyable)\\n音 (음 - 소리 - Sound)\\n楽 (악 - 기쁜 - Happy)\\n楽 (악 - 즐겁다 - Enjoy)\\n決 (결 - 결정하다 - Decide)\\n危 (위 - 위험한 - Dangerous)\\n際 (재 - 때 - Occasion)\\n可 (가 - 가능한 - Possible)\\n権 (권 - 권력 - Authority)\\n能 (능 - 능력 - Ability)\\n積 (적 - 쌓이다 - Accumulate)\\n記 (기 - 기록 - Record)\\n規 (규 - 규칙 - Rule)\\n副 (부 - 부분 - Part)\\n部 (부 - 부분 - Part)\\n質 (질 - 질문 - Question)\\n営 (영 - 경영하다 - Operate)\\n選 (선 - 선택하다 - Select)\\n標 (표 - 표시하다 - Mark)\\n準 (준 - 준비하다 - Prepare)\\n備 (비 - 갖추다 - Equip)\\n費 (비 - 비용 - Expense)\\n引 (인 - 끌다 - Pull)\\n億 (억 - 억 - Hundred Million)\\n害 (해 - 해를 끼치다 - Harm)\\n歌 (가 - 노래 - Song)\\n教 (교 - 가르치다 - Teach)\\n習 (습 - 배우다 - Learn)\\n習 (습 - 연습하다 - Practice)\\n習 (습 - 익히다 - Familiarize)\\n武 (무 - 군사 - Military)\\n能 (능 - 할 수 있다 - Be Able)\\n算 (산 - 계산하다 - Calculate)\\n計 (계 - 계획하다 - Plan)\\n養 (양 - 기르다 - Raise)\\n安 (안 - 안전한 - Safe)\\n必 (필 - 필요하다 - Necessary)\\n要 (요 - 필요 - Necessity)\\n求 (구 - 구하다 - Seek)\\n整 (정 - 정리하다 - Organize)\\n動 (동 - 움직이다 - Move)\\n無 (무 - 없는 - Without)\\n姿 (자 - 모습 - Figure)\\n様 (양 - 모양 - Shape)\\n変 (변 - 변하다 - Change)\\n表 (표 - 나타내다 - Express)\\n情 (정 - 감정 - Emotion)\\n知 (지 - 알다 - Know)\\n仕 (사 - 일 - Work)\\n領 (령 - 지배하다 - Rule)\\n合 (합 - 합치다 - Combine)\\n決 (결 - 결정하다 - Decide)\\n達 (달 - 이르다 - Reach)\\n達 (달 - 달성하다 - Achieve)\\n力 (력 - 힘 - Power)\\n男 (남 - 남자 - Man)\\n女 (녀 - 여자 - Woman)\\n性 (성 - 성 - Gender)\\n家 (가 - 집 - House)\\n員 (원 - 직원 - Member)\\n気 (기 - 기운 - Spirit)\\n意 (의 - 의도 - Intention)\\n軽 (경 - 가벼운 - Light)\\n重 (중 - 무거운 - Heavy)\\n軍 (군 - 군대 - Military)\\n事 (사 - 일 - Thing)\\n感 (감 - 감동 - Emotion)\\n想 (상 - 생각하다 - Think)\\n念 (념 - 생각 - Thought)\\n聴 (청 - 듣다 - Listen)\\n視 (시 - 보다 - See)\";","export default \"良 (량 - 좋은 - Good)\\n正 (정 - 바른 - Correct)\\n死 (사 - 죽다 - Die)\\n生 (생 - 살다 - Live)\\n保 (보 - 지키다 - Protect)\\n料 (료 - 재료 - Material)\\n製 (제 - 만들다 - Make)\\n用 (용 - 쓰다 - Use)\\n品 (품 - 물건 - Article)\\n消 (소 - 사라지다 - Disappear)\\n考 (고 - 생각하다 - Consider)\\n老 (로 - 늙은 - Old)\\n始 (시 - 시작하다 - Begin)\\n前 (전 - 앞 - Front)\\n後 (후 - 뒤 - Back)\\n楽 (악 - 즐거운 - Enjoyable)\\n音 (음 - 소리 - Sound)\\n楽 (악 - 기쁜 - Happy)\\n楽 (악 - 즐겁다 - Enjoy)\\n決 (결 - 결정하다 - Decide)\\n危 (위 - 위험한 - Dangerous)\\n際 (재 - 때 - Occasion)\\n可 (가 - 가능한 - Possible)\\n権 (권 - 권력 - Authority)\\n能 (능 - 능력 - Ability)\\n積 (적 - 쌓이다 - Accumulate)\\n記 (기 - 기록 - Record)\\n規 (규 - 규칙 - Rule)\\n副 (부 - 부분 - Part)\\n部 (부 - 부분 - Part)\\n質 (질 - 질문 - Question)\\n営 (영 - 경영하다 - Operate)\\n選 (선 - 선택하다 - Select)\\n標 (표 - 표시하다 - Mark)\\n準 (준 - 준비하다 - Prepare)\\n備 (비 - 갖추다 - Equip)\\n費 (비 - 비용 - Expense)\\n引 (인 - 끌다 - Pull)\\n億 (억 - 억 - Hundred Million)\\n害 (해 - 해를 끼치다 - Harm)\\n歌 (가 - 노래 - Song)\\n教 (교 - 가르치다 - Teach)\\n習 (습 - 배우다 - Learn)\\n習 (습 - 연습하다 - Practice)\\n習 (습 - 익히다 - Familiarize)\\n武 (무 - 군사 - Military)\\n能 (능 - 할 수 있다 - Be Able)\\n算 (산 - 계산하다 - Calculate)\\n計 (계 - 계획하다 - Plan)\\n養 (양 - 기르다 - Raise)\\n安 (안 - 안전한 - Safe)\\n必 (필 - 필요하다 - Necessary)\\n要 (요 - 필요 - Necessity)\\n求 (구 - 구하다 - Seek)\\n整 (정 - 정리하다 - Organize)\\n動 (동 - 움직이다 - Move)\\n無 (무 - 없는 - Without)\\n姿 (자 - 모습 - Figure)\\n様 (양 - 모양 - Shape)\\n変 (변 - 변하다 - Change)\\n表 (표 - 나타내다 - Express)\\n情 (정 - 감정 - Emotion)\\n知 (지 - 알다 - Know)\\n仕 (사 - 일 - Work)\\n領 (령 - 지배하다 - Rule)\\n合 (합 - 합치다 - Combine)\\n決 (결 - 결정하다 - Decide)\\n達 (달 - 이르다 - Reach)\\n達 (달 - 달성하다 - Achieve)\\n力 (력 - 힘 - Power)\\n男 (남 - 남자 - Man)\\n女 (녀 - 여자 - Woman)\\n性 (성 - 성 - Gender)\\n家 (가 - 집 - House)\\n員 (원 - 직원 - Member)\\n気 (기 - 기운 - Spirit)\\n意 (의 - 의도 - Intention)\\n軽 (경 - 가벼운 - Light)\\n重 (중 - 무거운 - Heavy)\\n軍 (군 - 군대 - Military)\\n事 (사 - 일 - Thing)\\n感 (감 - 감동 - Emotion)\\n想 (상 - 생각하다 - Think)\\n念 (념 - 생각 - Thought)\\n聴 (청 - 듣다 - Listen)\\n視 (시 - 보다 - See)\\n性 (성 - 성격 - Nature)\\n格 (격 - 격식 - Form)\\n良 (량 - 좋은 - Good)\\n正 (정 - 바른 - Correct)\\n死 (사 - 죽다 - Die)\\n生 (생 - 살다 - Live)\\n保 (보 - 지키다 - Protect)\\n料 (료 - 재료 - Material)\\n製 (제 - 만들다 - Make)\\n用 (용 - 쓰다 - Use)\\n品 (품 - 물건 - Article)\\n消 (소 - 사라지다 - Disappear)\\n考 (고 - 생각하다 - Consider)\\n老 (로 - 늙은 - Old)\";","export default \"始 (시 - 시작하다 - Begin)\\n前 (전 - 앞 - Front)\\n後 (후 - 뒤 - Back)\\n楽 (악 - 즐거운 - Enjoyable)\\n音 (음 - 소리 - Sound)\\n楽 (악 - 기쁜 - Happy)\\n楽 (악 - 즐겁다 - Enjoy)\\n決 (결 - 결정하다 - Decide)\\n危 (위 - 위험한 - Dangerous)\\n際 (재 - 때 - Occasion)\\n可 (가 - 가능한 - Possible)\\n権 (권 - 권력 - Authority)\\n能 (능 - 능력 - Ability)\\n積 (적 - 쌓이다 - Accumulate)\\n記 (기 - 기록 - Record)\\n規 (규 - 규칙 - Rule)\\n副 (부 - 부분 - Part)\\n部 (부 - 부분 - Part)\\n質 (질 - 질문 - Question)\\n営 (영 - 경영하다 - Operate)\\n選 (선 - 선택하다 - Select)\\n標 (표 - 표시하다 - Mark)\\n準 (준 - 준비하다 - Prepare)\\n備 (비 - 갖추다 - Equip)\\n費 (비 - 비용 - Expense)\\n引 (인 - 끌다 - Pull)\\n億 (억 - 억 - Hundred Million)\\n害 (해 - 해를 끼치다 - Harm)\\n歌 (가 - 노래 - Song)\\n教 (교 - 가르치다 - Teach)\\n習 (습 - 배우다 - Learn)\\n習 (습 - 연습하다 - Practice)\\n習 (습 - 익히다 - Familiarize)\\n武 (무 - 군사 - Military)\\n能 (능 - 할 수 있다 - Be Able)\\n算 (산 - 계산하다 - Calculate)\\n計 (계 - 계획하다 - Plan)\\n養 (양 - 기르다 - Raise)\\n安 (안 - 안전한 - Safe)\\n必 (필 - 필요하다 - Necessary)\\n要 (요 - 필요 - Necessity)\\n求 (구 - 구하다 - Seek)\\n整 (정 - 정리하다 - Organize)\\n動 (동 - 움직이다 - Move)\\n無 (무 - 없는 - Without)\\n姿 (자 - 모습 - Figure)\\n様 (양 - 모양 - Shape)\\n変 (변 - 변하다 - Change)\\n表 (표 - 나타내다 - Express)\\n情 (정 - 감정 - Emotion)\\n知 (지 - 알다 - Know)\\n仕 (사 - 일 - Work)\\n領 (령 - 지배하다 - Rule)\\n合 (합 - 합치다 - Combine)\\n決 (결 - 결정하다 - Decide)\\n達 (달 - 이르다 - Reach)\\n達 (달 - 달성하다 - Achieve)\\n力 (력 - 힘 - Power)\\n男 (남 - 남자 - Man)\\n女 (녀 - 여자 - Woman)\\n性 (성 - 성 - Gender)\\n家 (가 - 집 - House)\\n員 (원 - 직원 - Member)\\n気 (기 - 기운 - Spirit)\\n意 (의 - 의도 - Intention)\\n軽 (경 - 가벼운 - Light)\\n重 (중 - 무거운 - Heavy)\\n軍 (군 - 군대 - Military)\\n事 (사 - 일 - Thing)\\n感 (감 - 감동 - Emotion)\\n想 (상 - 생각하다 - Think)\\n念 (념 - 생각 - Thought)\\n聴 (청 - 듣다 - Listen)\\n視 (시 - 보다 - See)\\n性 (성 - 성격 - Nature)\\n格 (격 - 격식 - Form)\\n良 (량 - 좋은 - Good)\\n正 (정 - 바른 - Correct)\\n死 (사 - 죽다 - Die)\\n生 (생 - 살다 - Live)\\n保 (보 - 지키다 - Protect)\\n料 (료 - 재료 - Material)\\n製 (제 - 만들다 - Make)\\n用 (용 - 쓰다 - Use)\\n品 (품 - 물건 - Article)\\n消 (소 - 사라지다 - Disappear)\\n考 (고 - 생각하다 - Consider)\\n老 (로 - 늙은 - Old)\\n始 (시 - 시작하다 - Begin)\\n前 (전 - 앞 - Front)\\n後 (후 - 뒤 - Back)\\n楽 (악 - 즐거운 - Enjoyable)\\n音 (음 - 소리 - Sound)\\n楽 (악 - 기쁜 - Happy)\\n楽 (악 - 즐겁다 - Enjoy)\\n決 (결 - 결정하다 - Decide)\\n危 (위 - 위험한 - Dangerous)\\n際 (재 - 때 - Occasion)\\n可 (가 - 가능한 - Possible)\\n権 (권 - 권력 - Authority)\";","export default \"能 (능 - 능력 - Ability)\\n積 (적 - 쌓이다 - Accumulate)\\n記 (기 - 기록 - Record)\\n規 (규 - 규칙 - Rule)\\n副 (부 - 부분 - Part)\\n部 (부 - 부분 - Part)\\n質 (질 - 질문 - Question)\\n営 (영 - 경영하다 - Operate)\\n選 (선 - 선택하다 - Select)\\n標 (표 - 표시하다 - Mark)\\n準 (준 - 준비하다 - Prepare)\\n備 (비 - 갖추다 - Equip)\\n費 (비 - 비용 - Expense)\\n引 (인 - 끌다 - Pull)\\n億 (억 - 억 - Hundred Million)\\n害 (해 - 해를 끼치다 - Harm)\\n歌 (가 - 노래 - Song)\\n教 (교 - 가르치다 - Teach)\\n習 (습 - 배우다 - Learn)\\n習 (습 - 연습하다 - Practice)\\n習 (습 - 익히다 - Familiarize)\\n武 (무 - 군사 - Military)\\n能 (능 - 할 수 있다 - Be Able)\\n算 (산 - 계산하다 - Calculate)\\n計 (계 - 계획하다 - Plan)\\n養 (양 - 기르다 - Raise)\\n安 (안 - 안전한 - Safe)\\n必 (필 - 필요하다 - Necessary)\\n要 (요 - 필요 - Necessity)\\n求 (구 - 구하다 - Seek)\\n整 (정 - 정리하다 - Organize)\\n動 (동 - 움직이다 - Move)\\n無 (무 - 없는 - Without)\\n姿 (자 - 모습 - Figure)\\n様 (양 - 모양 - Shape)\\n変 (변 - 변하다 - Change)\\n表 (표 - 나타내다 - Express)\\n情 (정 - 감정 - Emotion)\\n知 (지 - 알다 - Know)\\n仕 (사 - 일 - Work)\\n領 (령 - 지배하다 - Rule)\\n合 (합 - 합치다 - Combine)\\n決 (결 - 결정하다 - Decide)\\n達 (달 - 이르다 - Reach)\\n達 (달 - 달성하다 - Achieve)\\n力 (력 - 힘 - Power)\\n男 (남 - 남자 - Man)\\n女 (녀 - 여자 - Woman)\\n性 (성 - 성 - Gender)\\n家 (가 - 집 - House)\\n員 (원 - 직원 - Member)\\n気 (기 - 기운 - Spirit)\\n意 (의 - 의도 - Intention)\\n軽 (경 - 가벼운 - Light)\\n重 (중 - 무거운 - Heavy)\\n軍 (군 - 군대 - Military)\\n事 (사 - 일 - Thing)\\n感 (감 - 감동 - Emotion)\\n想 (상 - 생각하다 - Think)\\n念 (념 - 생각 - Thought)\\n聴 (청 - 듣다 - Listen)\\n視 (시 - 보다 - See)\\n性 (성 - 성격 - Nature)\\n格 (격 - 격식 - Form)\\n良 (량 - 좋은 - Good)\\n正 (정 - 바른 - Correct)\\n死 (사 - 죽다 - Die)\\n生 (생 - 살다 - Live)\\n保 (보 - 지키다 - Protect)\\n料 (료 - 재료 - Material)\\n製 (제 - 만들다 - Make)\\n用 (용 - 쓰다 - Use)\\n品 (품 - 물건 - Article)\\n消 (소 - 사라지다 - Disappear)\\n考 (고 - 생각하다 - Consider)\\n老 (로 - 늙은 - Old)\\n始 (시 - 시작하다 - Begin)\\n前 (전 - 앞 - Front)\\n後 (후 - 뒤 - Back)\\n楽 (악 - 즐거운 - Enjoyable)\\n音 (음 - 소리 - Sound)\\n楽 (악 - 기쁜 - Happy)\\n楽 (악 - 즐겁다 - Enjoy)\\n決 (결 - 결정하다 - Decide)\\n危 (위 - 위험한 - Dangerous)\\n際 (재 - 때 - Occasion)\\n可 (가 - 가능한 - Possible)\\n権 (권 - 권력 - Authority)\\n能 (능 - 능력 - Ability)\\n積 (적 - 쌓이다 - Accumulate)\\n記 (기 - 기록 - Record)\\n規 (규 - 규칙 - Rule)\\n副 (부 - 부분 - Part)\\n部 (부 - 부분 - Part)\\n質 (질 - 질문 - Question)\\n営 (영 - 경영하다 - Operate)\\n選 (선 - 선택하다 - Select)\\n標 (표 - 표시하다 - Mark)\\n準 (준 - 준비하다 - Prepare)\\n備 (비 - 갖추다 - Equip)\";","import { render } from \"./App.vue?vue&type=template&id=11a4587b\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=11a4587b&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div :class=\"{ front: isFront, back: !isFront }\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: [\"isFront\"],\n};\n</script>\n\n<style scoped>\ndiv {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 12px;\n  padding: 1rem;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n  margin: 2rem auto;\n  width: 10rem;\n}\ndiv.front {\n  background-color: rgb(255, 244, 223);\n}\ndiv.back {\n  background-color: rgb(247, 226, 189);\n}\n</style>\n","import { render } from \"./BaseCard.vue?vue&type=template&id=68e2216b&scoped=true\"\nimport script from \"./BaseCard.vue?vue&type=script&lang=js\"\nexport * from \"./BaseCard.vue?vue&type=script&lang=js\"\n\nimport \"./BaseCard.vue?vue&type=style&index=0&id=68e2216b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-68e2216b\"]])\n\nexport default __exports__","<template>\n    <button :class=\"mode\">\n        <slot></slot>\n    </button>\n</template>\n\n<script>\nexport default {\n    props: ['mode'],\n}\n</script>\n\n<style scoped>\nbutton {\n    padding:0.75rem 1.5rem;\n    font-family:inherit;\n    background-color: rgb(123, 69, 18);\n    border: 1px solid rgb(123, 69, 18);\n    border-radius: 5px;\n    color: white;\n    cursor: pointer;\n}\n\nbutton:hover,\nbutton:active {\n    background-color: rgb(85, 45, 8);\n    border-color: rgb(85, 45, 8);\n}\n\n.flat {\n    background-color: transparent;\n    color: #3a0061;\n    border: none;\n}\n\n.flat:hover,\n.flat:active {\n    background-color: #edd2ff;\n}\n</style>","import { render } from \"./BaseButton.vue?vue&type=template&id=1be6cb5f&scoped=true\"\nimport script from \"./BaseButton.vue?vue&type=script&lang=js\"\nexport * from \"./BaseButton.vue?vue&type=script&lang=js\"\n\nimport \"./BaseButton.vue?vue&type=style&index=0&id=1be6cb5f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1be6cb5f\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\nimport BaseCard from './components/UI/BaseCard'\nimport BaseButton from './components/UI/BaseButton.vue'\n\nconst app = createApp(App)\n\napp.component('base-card', BaseCard)\napp.component('base-button', BaseButton)\n\napp.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkvue_hanja_flashcards\"] = self[\"webpackChunkvue_hanja_flashcards\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [999], function() { return __webpack_require__(5476); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createElementVNode","_createElementBlock","_Fragment","_hoisted_1","_renderList","i","_createVNode","_component_base_button","key","onClick","$event","$options","chooseVocabSet","style","default","_withCtx","_createTextVNode","_toDisplayString","_","_component_flash_card","vocabset","$data","vocab","currentVocabSet","class","_component_base_card","isFront","onMouseover","showBack","onMouseleave","showFront","_hoisted_2","hanja","_createCommentVNode","_hoisted_3","_hoisted_4","pronunciation","_hoisted_5","_hoisted_6","meaningEnglish","_hoisted_7","nextWord","props","watch","this","mounted","data","methods","console","log","word","randomWord","substring","info","length","infoParts","split","map","part","trim","Math","floor","random","__exports__","name","components","FlashCard","created","push","getVocabulary","vocab0","vocab1","vocab2","vocab3","vocab4","num","vocabListString","lines","line","fileContent","filter","render","_normalizeClass","front","$props","back","_renderSlot","_ctx","$slots","undefined","mode","app","createApp","App","component","BaseCard","BaseButton","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}